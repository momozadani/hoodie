// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        Int     @id @default(autoincrement())
  firstName String
  lastName  String
  email     String  @unique
  role      String
  orders    Order[]
}

model HoodieVariant {
  id        Int     @id @default(autoincrement())
  size      String // Size of the hoodie
  color     String // Color of the hoodie
  quantity  Int // Number of available hoodies in this combination
  available Boolean @default(true) // Is this variant available for purchase?
  imagePath String?
  Order     Order[]
  Size      Size?   @relation(fields: [sizeId], references: [id])
  sizeId    Int?
  Color     Color?  @relation(fields: [colorId], references: [id])
  colorId   Int?
}

model Size {
  id       Int             @id @default(autoincrement())
  name     String          @unique
  variants HoodieVariant[]
}

model Color {
  id       Int             @id @default(autoincrement())
  name     String          @unique
  variants HoodieVariant[]
}

model Order {
  id              Int           @id @default(autoincrement())
  user            User          @relation(fields: [userId], references: [id])
  userId          Int
  hoodieVariant   HoodieVariant @relation(fields: [hoodieVariantId], references: [id])
  hoodieVariantId Int
  quantity        Int
  location        Location      @relation(fields: [locationId], references: [id])
  createdAt       DateTime      @default(now())
  StickColor      StickColor    @relation(fields: [stickColorId], references: [id])
  stickColorId    Int
  locationId      Int
}

model StickColor {
  id    Int     @id @default(autoincrement())
  name  String  @unique
  order Order[]
}

model Location {
  id    Int     @id @default(autoincrement())
  name  String  @unique
  order Order[]
}
